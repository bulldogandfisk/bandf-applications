---
openapi: 3.0.3
info:
  title: metamask-react
  description: Base starter OAS
  version: 1.0.0
  license:
    name: AGPL-3.0-or-later
    url: https://spdx.org/licenses/AGPL-3.0-or-later.html
  termsOfService: https://spdx.org/licenses/AGPL-3.0-or-later.html
  contact:
    name: Bulldog and Fisk
    email: contact@bulldogandfisk.com
    url: https://github.com/bulldogandfisk/bandf-applications
servers:
  - url: http://localhost:3000/dev
    description: Dev server
tags:
  - name: public
    description: This is a public route.
  - name: private
    description: This is a private (authenticated) route.
paths:
  /view/{viewName}/{flags}:
    get:
      x-actor-id: view
      tags:
        - public
      description: >
        General view handler
      parameters:
        - in: path
          name: viewName
          schema:
            type: string
          required: true
          description: The ui to view
        - in: path
          name: flags
          schema:
            type: string
          description: >
            Will slot any data following viewName
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /token/issue:
    post:
      x-actor-id: token-issue
      tags:
        - public
      description: >
        Get a Bearer token as jwt.
      requestBody:
        description: >
          username/password (or Metamask equivalents)
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    userid:
                      type: string
                      pattern: '^0x[\dA-Fa-f]{40}$'
                      description: Ethereum public address
                    password:
                      type: string
                      pattern: '^0x[\dA-Fa-f]{130}$'
                      description: Metamask signed request
                    nonce:
                      type: string
                      description: The nonce used for signing request. Can be empty.
                  required:
                    - userid
                    - password
                - type: object
                  properties:
                    userid:
                      type: string
                      format: email
                    password:
                      type: string
                      minLength: 8
                      maxLength: 64
                  required:
                    - userid
                    - password
      responses:
        "200":
          description: Token issue
          content:
            application/json:
              schema:
                type: object
        "403":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
  /token/check:
    get:
      x-actor-id: token-check
      tags:
        - public
      description: >
        Check if a JWT is still valid. 200 if so, 400 if not.
      parameters:
        - in: header
          name: authorization
          schema:
            type: string
#          required: true
      responses:
        "200":
          description: Token check
          content:
            application/json:
              schema:
                type: object
        "400":
          $ref: "#/components/responses/400"
components:
  responses:
    "200":
      description: General OK response
      content:
        text/html:
          schema:
            type: string
    "302":
      description: Found. Generally used for presigned urls.
      content:
        text/html:
          schema:
            type: string
    "303":
      description: See other. A type of redirect.
    "400":
      description: Bad request
      content:
        application/json:
          schema:
            type: object
    "401":
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
    "402":
      description: Payment required
      content:
        application/json:
          schema:
            type: object
    "403":
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
    "404":
      description: Not found
      content:
        application/json:
          schema:
            type: string
    "500":
      description: Internal server error
      content:
        application/json:
          schema:
            type: object

